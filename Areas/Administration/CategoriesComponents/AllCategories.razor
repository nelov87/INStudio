@page "/Administration/Category/All"
@inject ApplicationDbContext db


<div class="content-wrapper">
    <section class="content">
        <div class="row">

          <div class="col-12">
            <div class="card">
              <div class="card-header">
                <h3 class="card-title">Categories</h3>

                <div class="card-tools">
                  <div class="input-group input-group-sm" style="width: 150px;">
                    <input type="text" name="table_search" class="form-control float-right" placeholder="Search">

                    <div class="input-group-append">
                      <button type="submit" class="btn btn-default"><i class="fas fa-search"></i></button>
                    </div>
                  </div>
                </div>
              </div>
              <!-- /.card-header -->
              <div class="card-body table-responsive p-0">
                <table class="table table-hover text-nowrap">
                  <thead>
                    <tr>
                      
                      <th>Title</th>
                      <th>Description</th>
                      <th>Action</th>
                      
                    </tr>
                  </thead>
                  <tbody>
                    @foreach (var item in @categoriesList)
                    {
                        <tr>
                            
                            <td>
                                @item.Title
                            </td>
                            <td>
                                @item.Description
                            </td>
                            
                            
                            <td>
                                <a @onclick='() => DeleteItem(item.Id)' class="btn btn-outline-danger"><i class="far fa-trash-alt"></i></a>
                            </td>
                        </tr>
                    }
                  </tbody>
                </table>
              </div>
              <!-- /.card-body -->
            </div>
            <!-- /.card -->
            
          </div>
        
        </div>
    </section>


    


    <section class="content">
      <div class="row">

          <div class="col-md-10">
            <!-- general form elements -->
            <div class="card card-primary">
              <div class="card-header">
                <h3 class="card-title">Options</h3>
              </div>
              <!-- /.card-header -->
              <!-- form start -->
              <div class="card-body">
                <button type="button" class="btn btn-primary" @onclick="@(() => OpenModal())">Add Category</button>
              </div>

              
                <div class="card-footer">
                  @* <button form="@pageId" type="submit" class="btn btn-success">Запиши</button> *@
                </div>
                
              
            </div>
            <!-- /.card -->

            
            

          </div>
          <!-- /div col-6 /.col (left) -->


          <div class="col-md-2">
              <!-- general form elements disabled -->
            <div class="card card-warning">
              <div class="card-header">
                <h3 class="card-title">General Elements</h3>
              </div>
              <!-- /.card-header -->
              <div class="card-body">
                


              </div>
              <!-- /.card-body -->
            </div>
            <!-- /.card -->
          </div>


      </div>
    </section>
    <!-- /.content -->

@if(showModal)
{
  <div class="modal" tabindex="-1" ig="modal-ld" style="display:block" role="dialog">
        <div class="modal-dialog modal-lg">
          <div class="modal-content">
            <div class="modal-header">
              <h4 class="modal-title">Add Category</h4>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
              <p>Ener Title an Description for category.</p>
              <EditForm id="@pageId" Model="categoryModel" OnValidSubmit="@HandleValidSubmit">
                  <DataAnnotationsValidator/>
                  <div class="form-group">
                    <label for="categoryModel.Title">Title</label>
                    <InputText class="form-control" @bind-Value="categoryModel.Title"/>
                  </div>
                  <div class="form-group">
                    <label for="categoryModel.Description">Description</label>
                    <InputText class="form-control" @bind-Value="categoryModel.Description"/>
                  </div>
                    
              </EditForm>
            </div>
            <div class="modal-footer justify-content-between">
              <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => CloseModal()">Close</button>
              <button type="submit" form="@pageId" class="btn btn-primary">Save changes</button>
            </div>
          </div>
          <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
      </div>
      <!-- /.modal -->
}


</div>



@code
{
string pageId = "abv";
bool showModal = false;

private HashSet<Category> categoriesList;


  private Category categoryModel = new Category();

    protected override void OnInitialized()
        {
            base.OnInitialized();
            
            categoriesList = this.db.Category.ToHashSet();
            
            

            StateHasChanged();
        }

  async void HandleValidSubmit(EditContext editContext)
  {
    
      
    
    this.db.Category.Add(categoryModel);
    this.db.SaveChanges();
    categoriesList = this.db.Category.ToHashSet();
    categoryModel = new Category();
    StateHasChanged();
  }
  
  void HandleInValidSubmit(EditContext editContext)
  {
    
  }

  void DeleteItem(string id)
  {
    Category categoryToDelete = this.db.Category.FirstOrDefault(x => x.Id == id);
    this.db.Category.Remove(categoryToDelete);
    this.db.SaveChanges();
    categoriesList = this.db.Category.ToHashSet();
    StateHasChanged();
  }


  

    void OpenModal()
    {
      showModal = true;
      StateHasChanged();
    }

    void CloseModal()
    {
      showModal = false;
      StateHasChanged();
    }
  
  
}    