@page "/Administration/Media/MediaGelleryCheck"
@inject ApplicationDbContext db
@using Microsoft.EntityFrameworkCore

@inject IINMediaService inmService
@using INStudio.Data
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment env

@* @typeparam TValue
@inherits InputBase<TValue> *@

<div class="content-wrapper">
  <section class="content">
    <div class="row">

      <div class="col-12">
        <div class="card">
          <div class="card-header">
            <h3 class="card-title">Responsive Hover Table</h3>

            <div class="card-tools">
              <div class="input-group input-group-sm" style="width: 150px;">
                <input type="text" name="table_search" class="form-control float-right" placeholder="Search">

                <div class="input-group-append">
                  <button type="submit" class="btn btn-default"><i class="fas fa-search"></i></button>
                </div>
              </div>
            </div>
          </div>
          <!-- /.card-header -->
          <div class="card-body table-responsive p-0">
            <table class="table table-hover text-nowrap">
              <thead>
                <tr>
                  <td>MediaId</td>
                  <th>Media</th>
                  <th>CategoryId</th>
                  <th>Category</th>
                  
                  <th>Action</th>

                </tr>
              </thead>
              <tbody>
                @foreach (var item in @mcList)
                {
                  <tr>
                    <td>
                      @item.INMediaId
                    </td>
                    <td>
                        <img src="@item.INMedia.Path" alt="Girl in a jacket" width="100" height="auto">
                      
                    </td>
                    <td>
                      @item.CategoryId
                    </td>
                    <td>
                      @item.Category.Title
                    </td>
                    
                    @* <td>
                      <img src="@item.Path" alt="Girl in a jacket" width="100" height="auto">
                    </td> *@

                    <td>
                      <a @onclick='() => DeleteItem(item.INMediaId, item.CategoryId)' class="btn btn-outline-danger"><i
                          class="far fa-trash-alt"></i></a>
                    </td>
                  </tr>
                }
              </tbody>
            </table>
          </div>
          <!-- /.card-body -->
        </div>
        <!-- /.card -->

      </div>

    </div>
  </section>





  <section class="content">
    <div class="row">

      <div class="col-md-10">
        <!-- general form elements -->
        <div class="card card-primary">
          <div class="card-header">
            <h3 class="card-title">Quick Example</h3>
          </div>
          <!-- /.card-header -->
          <!-- form start -->
          


          <div class="card-footer">
            @* <button form="@pageId" type="submit" class="btn btn-success">Запиши</button> *@
          </div>


        </div>
        <!-- /.card -->




      </div>
      <!-- /div col-6 /.col (left) -->


      <div class="col-md-2">
        <!-- general form elements disabled -->
        <div class="card card-warning">
          <div class="card-header">
            <h3 class="card-title">General Elements</h3>
          </div>
          <!-- /.card-header -->
          <div class="card-body">



          </div>
          <!-- /.card-body -->
        </div>
        <!-- /.card -->
      </div>


    </div>
  </section>
  <!-- /.content -->

  


</div>



@code
{
 
  
  
  private HashSet<INMediaCategory> mcList = new HashSet<INMediaCategory>();
  
  
  

    //[Parameter]
    //public TValue SelectedValue { get; set; }

  

  protected override void OnInitialized()
  {
    base.OnInitialized();

    mcList = this.db.INMediaCategories.Include(x => x.INMedia).Include(x => x.Category).ToHashSet();

    StateHasChanged();
  }

  

  

  void DeleteItem(string mid, string cid)
  {
      INMediaCategory mcToDelete = this.db.INMediaCategories
      .FirstOrDefault(x => x.INMediaId == mid && x.CategoryId == cid);
    
    StateHasChanged();
  }


  


  string GetMedia(string id)
  {
    string path = this.inmService.GetImage(id).Path;

    return path;
  }
}